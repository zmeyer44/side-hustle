{"version":3,"sources":["logo.svg","components/Button.js","components/Title.js","components/Navbar.js","data.js","context.js","components/Product.js","components/ProductList.js","components/Details.js","components/Cart/CartColums.js","components/Cart/EmptyCart.js","components/Cart/CartItem.js","components/Cart/CartList.js","components/Cart/PayPalButton.js","components/Cart/CartTotals.js","components/Cart/Cart.js","components/Default.js","components/Modal.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","ButtonContainer","styled","button","props","cart","prop","Title","name","title","className","Navbar","NavWrapper","to","src","logo","alt","width","Component","nav","storeProducts","id","img","price","company","info","inCart","count","total","detailProduct","ProductContext","React","createContext","ProductProvider","state","products","modalOpen","modalProduct","cartSubTotal","cartDelivery","cartTotal","setProducts","tempProducts","forEach","item","singleItem","setState","getItem","find","handleDetail","product","addToCart","index","indexOf","addTotals","openModal","closeModal","increment","tempCart","selectedProduct","decrement","removeItem","filter","removeProduct","clearCart","subTotal","map","this","Provider","value","children","ProductConsumer","Consumer","Product","ProductWrapper","onClick","disabled","div","ProductList","Fragment","key","Details","CartColums","EmptyCart","CartItem","style","height","CartList","MyApp","env","client","sandbox","production","currency","onError","err","console","log","onSuccess","payment","history","push","onCancel","data","CartTotals","type","Cart","length","Default","location","pathname","Modal","ModalContainer","App","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.bba50e74.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.350b200b.svg\";","import styled from 'styled-components';\r\n\r\nexport const ButtonContainer = styled.button`\r\ntext-transform:capitalize;\r\nfont-size:1.43rem;\r\nbackground: transparent;\r\nborder: 0.05rem solid var(--lightBlue);\r\nborder-color: ${props => props.cart ? \"var(--mainDark)\" : \"var(--lightBlue)\"};\r\ncolor: ${prop => (prop.cart ? \"var(--mainDark)\" : \"var(--lightBlue)\")};\r\nborder-radius: 0.5rem;\r\npadding: .2rem .5rem;\r\ncursor: pointer;\r\nmargin: .2rem .5rem .2rem 0;\r\ntransition:all .5s ease-in-out;\r\n&:hover{\r\n    background:${prop => prop.cart ? \"var(--mainYellow)\" : \"var(--lightBlue)\"};\r\n    color: var(--mainBlue);\r\n}\r\n&:focus{\r\n    outline: none;\r\n}\r\n`;","import React from 'react';\r\n\r\nexport default function Title({ name, title }) {\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col-10 mx-auto my-2 text-center text-title\">\r\n                <h1 className=\"text-capitalize font-weight-bold\">\r\n                    {name} \r\n                    <strong className=\"text-blue\">{title}\r\n                    </strong>\r\n                </h1>\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport logo from '../logo.svg';\r\nimport styled from 'styled-components';\r\nimport {ButtonContainer} from \"./Button\";\r\nimport Title from \"./Title\";\r\n\r\nexport default class Navbar extends Component {\r\n    render() {\r\n        return (\r\n            <NavWrapper className=\"navbar navbar-expand-sm navbar-dark px-sm-5\">\r\n            \r\n                <Link to='/'>\r\n                    <img src={logo} alt=\"store\" width=\"70px\" className=\"navbar-brand filter-green\">\r\n                    </img>\r\n\r\n                </Link>\r\n                <ul className=\"navbar-nav align-items-center\">\r\n                    <li className=\"nav-item ml-5\">\r\n                        <Link to=\"/\" className=\"nav-link\">\r\n                            products\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n                \r\n                       <div className=\"container-fluid text-center d-none d-lg-block col-6 ttt pr-5\">\r\n                <Title name=\"\" title=\"Side Hustle\" />\r\n                </div> \r\n                <Link to=\"/cart\" className=\"ml-auto\">\r\n                    <ButtonContainer>\r\n                        <span className=\"mr-2\">\r\n                            <i className=\"fas fa-cart-plus\" />\r\n                        </span>\r\n                        my cart\r\n                    </ButtonContainer>\r\n\r\n                </Link>\r\n            \r\n\r\n\r\n            </NavWrapper>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst NavWrapper = styled.nav`\r\nbackground: var(--mainBlue);\r\n.nav-link{\r\n    color:var(--mainWhite)!important;\r\n    font-size:1.3rem;\r\n    text-transform: capitalize;\r\n}\r\n`\r\n","\n\nexport const storeProducts = [\n  {\n    id: 1,\n    title: \"Sourdough - Plain\",\n    img: \"img/sourdoughplain.png\",\n    price: 6,\n    company: \"SHBC\",\n    info:\n      \"Sourdough bread is made by the fermentation of dough using naturally occurring lactobacilli and yeast. Sourdough bread has a more sour taste and better inherent keeping qualities than breads made with baker's yeast, due to the lactic acid produced by the lactobacilli.\",\n    inCart: false,\n    count: 0,\n    total: 0\n  },\n  {\n    id: 2,\n    title: \"Sourdough - Everything\",\n    img: \"img/sourdoughev.png\",\n    price: 6,\n    company: \"SHBC\",\n    info:\n      \"Sourdough bread is made by the fermentation of dough using naturally occurring lactobacilli and yeast. Sourdough bread has a more sour taste and better inherent keeping qualities than breads made with baker's yeast, due to the lactic acid produced by the lactobacilli.\",\n    inCart: false,\n    count: 0,\n    total: 0\n  },\n  {\n    id: 3,\n    title: \"Semolina Twist\",\n    img: \"img/twist1.png\",\n    price: 6,\n    company: \"SHBC\",\n    info:\n      \"The Semolina Twist is made with the finest Semolina flour. Traditionaly, Semolina flour is used in Italy to make pasta. Semolina bread is a staple in Sicily. This fluffy, chewy, golden loaf of homemade bread is just about the best thing that could possibly happen to your day!\",\n    inCart: false,\n    count: 0,\n    total: 0\n  },\n  {\n    id: 4,\n    title: \"Pane Pugliese\",\n    img: \"img/pan.png\",\n    price: 6,\n    company: \"SHBC\",\n    info:\n      \"Golden in colour with a slightly chewy texture, this bread is made to a traditional recipe using durum wheat flour from a mill in Puglia, Southern Italy. Pane Pugliese is the finest toasting bread. For the best, authentic bruschetta top with your favourite ingredients or serve at breakfast with butter and Crosta & Mollica conserves.\",\n    inCart: false,\n    count: 0,\n    total: 0\n  }\n];\n\nexport const detailProduct = {\n  id: 1,\n    title: \"Sourdough - Plain\",\n    img: \"img/sourdoughplain.png\",\n    price: 6,\n    company: \"SHBC\",\n    info:\n      \"Sourdough bread is made by the fermentation of dough using naturally occurring lactobacilli and yeast. Sourdough bread has a more sour taste and better inherent keeping qualities than breads made with baker's yeast, due to the lactic acid produced by the lactobacilli.\",\n    inCart: false,\n    count: 0,\n    total: 0\n};\n","import React, { Component } from 'react';\r\nimport {storeProducts, detailProduct} from './data';\r\nconst ProductContext = React.createContext();\r\n\r\n class ProductProvider extends Component {\r\n     state ={\r\n         products:[],\r\n         detailProduct:detailProduct,\r\n         cart:[],\r\n         modalOpen:false,\r\n         modalProduct:detailProduct,\r\n         cartSubTotal:0,\r\n         cartDelivery:0,\r\n         cartTotal:0,\r\n     };\r\n     componentDidMount(){\r\n         this.setProducts();\r\n     }\r\n     setProducts =()=>{\r\n         let tempProducts =[];\r\n         storeProducts.forEach(item =>{\r\n             const singleItem = {...item};\r\n             tempProducts = [...tempProducts,singleItem];\r\n         })\r\n         this.setState(()=>{\r\n             return {products:tempProducts};\r\n         })\r\n     };\r\n\r\n     getItem = (id) => {\r\n         const product = this.state.products.find(item => item.id ===id);\r\n         return product;\r\n     };\r\n\r\n     handleDetail = id => {\r\n         const product = this.getItem(id);\r\n         this.setState(()=>{\r\n             return {detailProduct:product}\r\n         })\r\n     };\r\n     addToCart = id => {\r\n        let tempProducts = [...this.state.products];\r\n        const index = tempProducts.indexOf(this.getItem(id));\r\n        const product = tempProducts[index];\r\n        product.inCart = true;\r\n        product.count = 1;\r\n        const price = product.price;\r\n        product.total = price;\r\n        this.setState(()=>{\r\n            return {products: tempProducts,cart:[...this.state.cart,product]};\r\n\r\n        },\r\n        () => {\r\nthis.addTotals();\r\n        }\r\n        );\r\n    };\r\n    \r\n    openModal = id =>{\r\n        const product = this.getItem(id);\r\n        this.setState(()=>{\r\n            return {modalProduct: product, modalOpen: true };\r\n        });\r\n    };\r\n    closeModal = ()=>{\r\n        this.setState(()=>{\r\n            return { modalOpen:false};\r\n        });\r\n    };\r\n\r\n    increment = (id) =>{\r\n        let tempCart = [...this.state.cart];\r\n        const selectedProduct = tempCart.find(item=>item.id === id)\r\n        const index = tempCart.indexOf(selectedProduct);\r\n        const product = tempCart[index];\r\n        product.count = product.count + 1;\r\n        product.total = product.count * product.price;\r\n        this.setState(()=>{return{cart:[...tempCart]};},\r\n        () => {\r\n            this.addTotals();\r\n        });\r\n\r\n    };\r\n    decrement = (id) =>{\r\n        let tempCart = [...this.state.cart];\r\n        const selectedProduct = tempCart.find(item=>item.id === id)\r\n        const index = tempCart.indexOf(selectedProduct);\r\n        const product = tempCart[index];\r\n        product.count = product.count - 1;\r\n        if(product.count===0){\r\n            this.removeItem(id);\r\n        } else {\r\n        product.total = product.count * product.price;\r\n        this.setState(()=>{return{cart:[...tempCart]};},\r\n        () => {\r\n            this.addTotals();\r\n        }); } \r\n    };\r\n    removeItem = (id) =>{\r\nlet tempProducts = [...this.state.products];\r\nlet tempCart = [...this.state.cart];\r\ntempCart = tempCart.filter(item => item.id !== id);\r\nconst index = tempProducts.indexOf(this.getItem(id));\r\nlet removeProduct = tempProducts[index];\r\nremoveProduct.inCart = false;\r\nremoveProduct.count = 0;\r\nremoveProduct.total = 0;\r\n\r\nthis.setState(()=>{\r\n    return {\r\n        cart:[...tempCart],\r\n        products:[...tempProducts]\r\n    }\r\n},()=>{\r\n    this.addTotals()\r\n})\r\n    };\r\n    clearCart = ()=>{\r\n        this.setState(()=>{\r\n            return {cart: []};\r\n        },()=>{\r\nthis.setProducts();\r\nthis.addTotals();\r\n        });\r\n\r\n    };\r\n    addTotals =()=> {\r\n        let subTotal = 0;\r\n        this.state.cart.map(item =>(subTotal += item.total));\r\n        const del = 2;\r\n        const total = subTotal + del;\r\n        this.setState(()=>{\r\n            return{\r\n                cartSubTotal: subTotal,\r\n                cartDelivery: del,\r\n                cartTotal: total\r\n            };\r\n        });\r\n    };\r\n    render() {\r\n        return (\r\n            <ProductContext.Provider value={{\r\n                ...this.state,\r\n                handleDetail:this.handleDetail,\r\n                addToCart:this.addToCart,\r\n                openModal: this.openModal,\r\n                closeModal: this.closeModal,\r\n                increment:this.increment,\r\n                decrement:this.decrement,\r\n                removeItem:this.removeItem,\r\n                clearCart:this.clearCart\r\n                }}>\r\n                {this.props.children}\r\n            </ProductContext.Provider>\r\n        );\r\n    }\r\n}\r\nconst ProductConsumer = ProductContext.Consumer;\r\nexport {ProductProvider,ProductConsumer};","import React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ProductConsumer } from \"../context\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default class Product extends Component {\r\n  render() {\r\n    const { id, title, img, price, inCart } = this.props.product;\r\n    return (\r\n      <ProductWrapper className=\"col-9 mx-auto col-md-8 col-lg-7 my-3\">\r\n        \r\n          <div className=\"card\">\r\n          <ProductConsumer>\r\n              {value => (\r\n                  <div \r\n                  className=\"img-container p-0\"\r\n                  onClick={()=>\r\n                    value.handleDetail(id)\r\n                }\r\n                 >\r\n\r\n              <Link to=\"/details\">\r\n                <img src={img} alt=\"product\" className=\"card-img-top\"></img>\r\n              </Link>\r\n              <button\r\n                className=\"cart-btn\"\r\n                disabled={inCart ? true : false}\r\n                onClick={() => {\r\n                  value.addToCart(id);\r\n                  value.openModal(id);\r\n                }}\r\n              >\r\n                {inCart ? (\r\n                  <p className=\"text-capitalize mb-0\" disabled>\r\n                    {\" \"}\r\n                    in cart\r\n                  </p>\r\n                ) : (\r\n                  <i className=\"fas fa-cart-plus\" />\r\n                )}\r\n              </button>\r\n            </div>\r\n              )}\r\n              </ProductConsumer>\r\n          <div className=\"card-footer d-flex justify-content-between\">\r\n            <p className=\"align-self-center mb-0\">{title}</p>\r\n            <h5 className=\"text-Blue font-italic mb-0\">\r\n              <span className=\"mr-1\">$</span>\r\n              {price}\r\n            </h5>\r\n          </div>\r\n        </div>\r\n      </ProductWrapper>\r\n    );\r\n  }\r\n}\r\nProduct.propTypes = {\r\n  product: PropTypes.shape({\r\n    id: PropTypes.number,\r\n    img: PropTypes.string,\r\n    title: PropTypes.string,\r\n    price: PropTypes.number,\r\n    inCart: PropTypes.bool,\r\n  }).isRequired,\r\n};\r\nconst ProductWrapper = styled.div`\r\n  .card {\r\n    border-color: transparent;\r\n    transition: all 0.5s linear;\r\n  }\r\n  .card-footer {\r\n    background: transparent;\r\n    border-top: transparent;\r\n    transition: all 0.5s linear;\r\n  }\r\n  &:hover {\r\n    .card {\r\n      border: 0.04rem solid rgba(0, 0, 0, 0.2);\r\n      box-shadow: 3px 3px 5px 0px rgba(0, 0, 0, 0.2);\r\n    }\r\n    .card-footer {\r\n      background: rgba(247, 247, 247);\r\n    }\r\n  }\r\n  .img-container {\r\n    position: relative;\r\n    overflow: hidden;\r\n  }\r\n  .card-img-top {\r\n    transition: all 0.5s linear;\r\n  }\r\n  .img-container:hover .card-img-top {\r\n    transform: scale(1.2);\r\n  }\r\n  .cart-btn {\r\n    position: absolute;\r\n    bottom: 0;\r\n    right: 0;\r\n    padding: 0.2rem 0.4rem;\r\n    background: var(--lightBlue);\r\n    border: none;\r\n    color: var(--mainWhite);\r\n    font-size: 1.4rem;\r\n    border-radius: 0.5rem 0 0 0;\r\n    transform: translate(100%, 100%);\r\n    transition: all 0.5s linear;\r\n  }\r\n  .img-container:hover .cart-btn {\r\n    transform: translate(0, 0);\r\n  }\r\n  .cart-btn:hover {\r\n    color: var(--mainBlue);\r\n    cursor: pointer;\r\n  }\r\n`;\r\n","import React, { Component } from 'react';\r\nimport Product from './Product';\r\nimport Title from './Title';\r\nimport { ProductConsumer } from '../context'\r\nexport default class ProductList extends Component {\r\n    \r\n    render() {\r\n        return (\r\n\r\n            <React.Fragment>\r\n                <div className=\"py-5\">\r\n                    <div className=\"container\">\r\n                        <Title name=\"our products\" title=\"\" />\r\n                        <div className=\"row\">\r\n                            <ProductConsumer>\r\n                                {(value) => {\r\n                                    return value.products.map( product =>{\r\n                                        return <Product key={product.id} product={product}/>\r\n                                    });\r\n                                }}\r\n                            </ProductConsumer>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { ProductConsumer } from \"../context\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ButtonContainer } from \"./Button\";\r\nexport default class Details extends Component {\r\n  render() {\r\n    return (\r\n      <ProductConsumer>\r\n        {value => {\r\n          const { id, company, img, info, price, title, inCart } = value.detailProduct;\r\n          return (\r\n            <div className=\"container py-5\">\r\n              {/*title}*/}\r\n              <div className=\"row\">\r\n                <div className=\"col-10 mx-auto text-center text-slanted text-blue my-5\">\r\n                  <h1>{title}</h1>\r\n                </div>\r\n              </div>\r\n              {/* end title*/}\r\n              {}\r\n              <div className=\"row\">\r\n                <div className=\"col-10 mx-auto col-md-6 my-3 text-capitalize\">\r\n                  <img src={img} className=\"img-fluid\" alt=\"product\"></img>\r\n                </div>\r\n                {}\r\n                <div className=\"col-10 mx-auto col-md-6 my-3 text-capitalize\">\r\n                  <h2>{title}</h2>\r\n                  <h4 className=\"text-blue\">\r\n                      <strong>\r\n                          price : <span>$</span>\r\n                          {price}\r\n                      </strong>\r\n                  </h4>\r\n                  <p className=\"text-capitalize font-weight-bold mt-3 mb-0\">\r\n                      some additional information:\r\n                  </p>\r\n                  <p className=\"text-muted lead\">{info}</p>\r\n                  <div>\r\n                      <Link to=\"/\">\r\n                          <ButtonContainer>back to \r\n                              products</ButtonContainer>\r\n                      </Link>\r\n                      <ButtonContainer\r\n                      cart\r\n                      disabled={inCart ? true : false}\r\n                      onClick={()=>{\r\n                          value.addToCart(id);\r\n                          value.openModal(id);\r\n                      }}\r\n                      >\r\n                          {inCart ? \"inCart\" : \"add to cart\"}\r\n                      </ButtonContainer>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </ProductConsumer>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nexport default function CartColums() {\r\n    return (\r\n        <div className=\"container-fluid text-center d-none d-lg-block\">\r\n            <div className=\"row\">\r\n                <div className = \"col-10 mx-auto col-lg-2\">\r\n                    <p className=\"text-uppercase\">products</p>\r\n                </div>\r\n                <div className = \"col-10 mx-auto col-lg-2\">\r\n                    <p className=\"text-uppercase\">name of prouduct</p>\r\n                </div>\r\n                <div className = \"col-10 mx-auto col-lg-2\">\r\n                    <p className=\"text-uppercase\">price</p>\r\n                </div>\r\n                <div className = \"col-10 mx-auto col-lg-2\">\r\n                    <p className=\"text-uppercase\">quantity</p>\r\n                </div>\r\n                <div className = \"col-10 mx-auto col-lg-2\">\r\n                    <p className=\"text-uppercase\">remove</p>\r\n                </div>\r\n                <div className = \"col-10 mx-auto col-lg-2\">\r\n                    <p className=\"text-uppercase\">total</p>\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n}\r\n","import React from 'react'\r\n\r\nexport default function EmptyCart() {\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <div className=\"row\">\r\n                <div className=\"col-10 mx-auto text-center text-title\">\r\n                    <h1>your cart is empty</h1>\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function CartItem({item,value}) {\r\n    const{id,title,img,price,total,count} = item;\r\n    const {increment,decrement,removeItem} =value\r\n\r\n    return (\r\n        <div className=\"row my-2 text-capitalize text-center\">\r\n            <div className=\"col-10 mx-auto col-lg-2\">\r\n                <img \r\n                src={img}\r\n                style={{height: \"5rem\"}}\r\n                className=\"img-fluid\"\r\n                alt=\"product\" />\r\n\r\n            </div>\r\n            <div className=\"col-10 mx-auto col-lg-2\">\r\n                <span className=\"d-lg-none\">product : </span>\r\n                {title}\r\n            </div>\r\n            <div className=\"col-10 mx-auto col-lg-2\">\r\n            <span className=\"d-lg-none\">price : </span>\r\n                {price}\r\n            </div>\r\n            <div className=\"col-10 mx-auto col-lg-2 my-2 my-lg-0\">\r\n                <div className=\"d-flex justify-content-center\">\r\n                    <div>\r\n                   <span className=\"btn btn-black mx-1\" onClick={()=>decrement(id)}>\r\n                       -\r\n                   </span>\r\n                   <span className=\"btn btn-black mx-1\">\r\n                       {count}\r\n                   </span>\r\n                   <span className=\"btn btn-black mx-1\" onClick={()=>increment(id)}>\r\n                       +\r\n                   </span>\r\n                   </div>\r\n                   </div>\r\n                </div>\r\n                <div className=\"col-10 mx-auto col-lg-2\">\r\n            <div className=\"cart-icon\" onClick={()=>removeItem(id)}>\r\n                <i className=\"fas fa-trash\" />\r\n            </div>\r\n               \r\n            </div>\r\n                <div className=\"col-10 mx-auto col-lg-2\">\r\n            <strong>item total : $  {total}</strong>\r\n               \r\n            </div>\r\n            </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport CartItem from './CartItem';\r\nexport default function CartList({value}) {\r\n    const {cart} = value;\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            {cart.map(item => {\r\n                return <CartItem key={item.id} item={item} value={value} />;\r\n            })}\r\n            \r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport PaypalExpressBtn from 'react-paypal-express-checkout';\r\n \r\nexport default class MyApp extends React.Component {\r\n    render() {\r\n        const onSuccess = (payment) => {\r\n            // Congratulation, it came here means everything's fine!\r\n                    console.log(\"The payment was succeeded!\", payment);\r\n                    this.props.clearCart();\r\n                    this.props.history.push('/');\r\n            \t\t// You can bind the \"payment\" object's value to your state or props or whatever here, please see below for sample returned data\r\n        }\r\n \r\n        const onCancel = (data) => {\r\n            // User pressed \"cancel\" or close Paypal's popup!\r\n            console.log('The payment was cancelled!', data);\r\n            // You can bind the \"data\" object's value to your state or props or whatever here, please see below for sample returned data\r\n        }\r\n \r\n        const onError = (err) => {\r\n            // The main Paypal's script cannot be loaded or somethings block the loading of that script!\r\n            console.log(\"Error!\", err);\r\n            // Because the Paypal's main script is loaded asynchronously from \"https://www.paypalobjects.com/api/checkout.js\"\r\n            // => sometimes it may take about 0.5 second for everything to get set, or for the button to appear\r\n        }\r\n \r\n        let env = 'sandbox'; // you can set here to 'production' for production\r\n        let currency = 'USD'; // or you can set this value from your props or state\r\n        //let total = 1; // same as above, this is the total amount (based on currency) to be paid by using Paypal express checkout\r\n        // Document on Paypal's currency code: https://developer.paypal.com/docs/classic/api/currency_codes/\r\n \r\n        const client = {\r\n            sandbox:  \"ATco9eeENeT9M98FMmXbmviCjDjXybGbDD7MjYU1oS2leLUHJTzGAV1bFOsnCkeE7rPJYMCI5wDa9HQl\",\r\n            production: 'YOUR-PRODUCTION-APP-ID',\r\n        }\r\n        // In order to get production's app-ID, you will have to send your app to Paypal for approval first\r\n        // For sandbox app-ID (after logging into your developer account, please locate the \"REST API apps\" section, click \"Create App\"):\r\n        //   => https://developer.paypal.com/docs/classic/lifecycle/sb_credentials/\r\n        // For production app-ID:\r\n        //   => https://developer.paypal.com/docs/classic/lifecycle/goingLive/\r\n \r\n        // NB. You can also have many Paypal express checkout buttons on page, just pass in the correct amount and they will work!\r\n        return (\r\n            <PaypalExpressBtn env={env} client={client} currency={currency} total={this.props.total} onError={onError} onSuccess={onSuccess} onCancel={onCancel} />\r\n        );\r\n    }\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport PayPalButton from './PayPalButton';\r\nexport default function CartTotals({value,history}) {\r\n    const{cartSubTotal,cartDelivery,cartTotal,clearCart} = value;\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-10 mt-2 ml-sm-5 ml-md-auto col-sm-8 text-capitalize text-right\">\r\n                        <Link to=\"/\">\r\n                            <button\r\n                            className=\"btn btn-outline-danger text-uppercase mb-3 px-5\"\r\n                            type=\"button\"\r\n                            onClick={()=> clearCart()}>\r\n                                clear cart\r\n                            </button>\r\n                        </Link>\r\n                        <h5>\r\n                            <span className=\"text-title\">\r\n                                subtotal :\r\n                            </span>\r\n                            <strong>$ {cartSubTotal}</strong>\r\n                        </h5>\r\n                        <h5>\r\n                            <span className=\"text-title\">\r\n                                delivery :\r\n                            </span>\r\n                            <strong>$ {cartDelivery}</strong>\r\n                        </h5>\r\n                        <h5>\r\n                            <span className=\"text-title\">\r\n                                total :\r\n                            </span>\r\n                            <strong>$ {cartTotal}</strong>\r\n                        </h5>\r\n                        <PayPalButton total={cartTotal} clearCart={clearCart} history={history}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Title from \"../Title\";\r\nimport CartColums from \"./CartColums\";\r\nimport EmptyCart from \"./EmptyCart\";\r\nimport { ProductConsumer } from \"../../context\";\r\nimport CartList from \"./CartList\";\r\nimport CartTotals from \"./CartTotals\";\r\nexport default class Cart extends Component {\r\n  render() {\r\n    return (\r\n      <section>\r\n        <ProductConsumer>\r\n          {(value) => {\r\n            const { cart } = value;\r\n            if (cart.length > 0) {\r\n              return (\r\n                <React.Fragment>\r\n                  <Title name=\"your cart\" />\r\n                  <CartColums />\r\n                  <CartList value={value} />\r\n                  <CartTotals value={value} history={this.props.history}/>\r\n                </React.Fragment>\r\n              );\r\n            } else {\r\n              return <EmptyCart />;\r\n            }\r\n          }}\r\n        </ProductConsumer>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Default extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-10 mx-auto text-center text-title text-uppercase pt-5\">\r\n                        <h1 className=\"display-3\">404</h1>\r\n                        <h1>error</h1>\r\n                        <h2>page not found\r\n                        </h2>\r\n                        <h3>the requested url\r\n                            <span className=\"text-danger\">{this.props.location.pathname}\r\n                            </span> {\" \"}\r\n                            was not found\r\n                        </h3>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    };\r\n}\r\n","import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport {ProductConsumer} from '../context';\r\nimport {ButtonContainer} from './Button';\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport default class Modal extends Component {\r\n    render() {\r\n        return (\r\n           <ProductConsumer>\r\n               {(value)=> {\r\n                   const {modalOpen, closeModal} = value;\r\n                   const{img,title,price} = value.modalProduct;\r\n                   if(!modalOpen){\r\n                       return null;\r\n                   }\r\n                   else{\r\n                       return (\r\n                       <ModalContainer>\r\n                           <div className=\"container\">\r\n                               <div className=\"row\">\r\n                                   <div \r\n                                   id=\"modal\" \r\n                                   className=\"col-8 mx-auto col-md-6 col-lg-4 text-center text-capitalize p-5\">\r\n                                       <h5>item added to the cart</h5>\r\n                                       <img src={img} className=\"img-fluid\" alt=\"product\"></img>\r\n                                       <h5>{title}</h5>\r\n                                       <h5 className=\"text-muted\">price : $ {price}</h5>\r\n                                       <Link to='/'>\r\n                                           <ButtonContainer onClick={()=>closeModal()}>\r\n                                               back to store \r\n                                           </ButtonContainer>\r\n                                       </Link>\r\n                                       <Link to='/cart'>\r\n                                           <ButtonContainer cart onClick={()=>closeModal()}>\r\n                                               go to cart\r\n                                           </ButtonContainer>\r\n                                       </Link>\r\n                                   </div>\r\n                               </div>\r\n                           </div>\r\n\r\n                       </ModalContainer>\r\n                       );\r\n                   }\r\n               }}\r\n           </ProductConsumer>\r\n        )\r\n    }\r\n}\r\n\r\nconst ModalContainer = styled.div`\r\nposition: fixed;\r\ntop:0;\r\nleft:0;\r\nright:0;\r\nbottom:0;\r\nbackground: rgba(0,0,0,0.3);\r\ndisplay: flex;\r\nalign-items: center;\r\njustify-content:center;\r\n#modal{\r\n    background: var(--mainWhite);\r\n}\r\n`;","import React, { Component } from 'react';\nimport {Switch,Route} from 'react-router-dom';\nimport logo from './logo.svg';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Navbar from './components/Navbar';\nimport ProductList from './components/ProductList';\nimport Details from './components/Details';\nimport Cart from './components/Cart';\nimport Default from './components/Default';\nimport Modal from './components/Modal';\n\nclass App extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/\" component={ProductList} />\n          <Route path=\"/details\" component={Details} />\n          <Route path=\"/cart\" component={Cart} />\n          <Route component={Default} />\n        </Switch>\n        <Modal />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter as Router} from 'react-router-dom';\nimport {ProductProvider} from './context';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <ProductProvider>\n  <Router>\n    <App />\n  </Router>\n  </ProductProvider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}